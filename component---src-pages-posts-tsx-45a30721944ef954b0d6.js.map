{"version":3,"sources":["webpack://waqas-ali/./node_modules/@chakra-ui/core/dist/es/Stack/index.js","webpack://waqas-ali/./src/pages/posts.tsx"],"names":["Stack","forwardRef","_ref","ref","_direction","direction","_ref$isInline","isInline","_ref$isReversed","isReversed","children","align","justify","_ref$spacing","spacing","shouldWrapChildren","rest","_isReversed","endsWith","_isInline","startsWith","validChildrenArray","Children","filter","isValidElement","map","child","index","_ref2","_ref3","isLastChild","length","spacingProps","d","key","cloneElement","Post","title","path","excerpt","date","to","size","marginBottom","fontSize","fontWeight","posts","data","allMdx","edges","node","frontmatter","post"],"mappings":"2LAUIA,GAAQ,IAAAC,aAAW,SAAUC,EAAMC,GACrC,IAiBIC,EAjBAC,EAAYH,EAAKG,UACjBC,EAAgBJ,EAAKK,SACrBA,OAA6B,IAAlBD,GAAmCA,EAC9CE,EAAkBN,EAAKO,WACvBA,OAAiC,IAApBD,GAAqCA,EAClDE,EAAWR,EAAKQ,SAChBC,EAAQT,EAAKS,MACbC,EAAUV,EAAKU,QACfC,EAAeX,EAAKY,QACpBA,OAA2B,IAAjBD,EAA0B,EAAIA,EACxCE,EAAqBb,EAAKa,mBAC1BC,EAAO,IAA8Bd,EAAM,CAAC,YAAa,WAAY,aAAc,WAAY,QAAS,UAAW,UAAW,uBAE9He,EAAcR,GAAcJ,GAAaA,EAAUa,SAAS,WAE5DC,EAAYZ,GAAYF,GAAaA,EAAUe,WAAW,OAI1DD,IACFf,EAAa,OAGXa,IACFb,EAAaG,EAAW,cAAgB,kBAGtCF,IACFD,EAAaC,GAGVc,GAAcF,GAAgBZ,IACjCD,EAAa,UAGf,IAAIiB,EAAqB,EAAAC,SAAA,QAAiBZ,GAAUa,OAAO,EAAAC,gBAC3D,OAAO,QAAI,IAAM,IAAS,CACxBb,MAAOA,EACPC,QAASA,EACTP,UAAWD,GACVY,EAAM,CACPb,IAAKA,IACHkB,EAAmBI,KAAI,SAAUC,EAAOC,GAC1C,IAAIC,EAAOC,EAEPC,EAAcT,EAAmBU,SAAWJ,EAAQ,EACpDK,EAAeb,IAAaS,EAAQ,IAAUX,EAAc,KAAO,MAAQa,EAAc,KAAOhB,EAASc,KAAUC,EAAQ,IAAUZ,EAAc,KAAO,MAAQa,EAAc,KAAOhB,EAASe,GAEpM,OAAId,GACK,QAAI,KAAK,IAAS,CACvBkB,EAAG,gBACFD,EAAc,CACfE,IAAK,qBAAuBP,IAC1BD,IAGC,IAAAS,cAAaT,EAAOM,UAG/B,O,kHCzDMI,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,KAAzB,OAC/B,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAcC,GAAIH,GAChB,gBAAC,IAAD,CAASI,KAAK,KAAKC,aAAc,GAC9BN,IAGL,gBAAC,IAAD,CAAMO,SAAS,KAAKC,WAAW,SAC5BL,GAEH,gBAAC,IAAD,CAAMI,SAAS,KAAKC,WAAW,SAC5BN,KAgDP,UA3C6B,SAAC,GAIvB,IACCO,EADF,EAHJC,KACEC,OAAUC,MAGQxB,KAClB,qBAAGyB,KAAQC,eAEb,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAKd,MAAM,UACX,gBAAC,IAAD,CAAOvB,QAAS,GACbgC,EAAMrB,KAAI,SAAC2B,EAAMlB,GAAP,OACT,gBAAC,IAAD,CAAWS,aAAc,GACvB,gBAACP,EAAD,eAAMF,IAAKA,GAASkB","file":"component---src-pages-posts-tsx-45a30721944ef954b0d6.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { forwardRef } from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport Flex from \"../Flex\";\nimport Box from \"../Box\"; // TODO: Reduce complexity by deprecating isInline and isReversed prop\n\nvar Stack = forwardRef(function (_ref, ref) {\n  var direction = _ref.direction,\n      _ref$isInline = _ref.isInline,\n      isInline = _ref$isInline === void 0 ? false : _ref$isInline,\n      _ref$isReversed = _ref.isReversed,\n      isReversed = _ref$isReversed === void 0 ? false : _ref$isReversed,\n      children = _ref.children,\n      align = _ref.align,\n      justify = _ref.justify,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,\n      shouldWrapChildren = _ref.shouldWrapChildren,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"direction\", \"isInline\", \"isReversed\", \"children\", \"align\", \"justify\", \"spacing\", \"shouldWrapChildren\"]);\n\n  var _isReversed = isReversed || direction && direction.endsWith(\"reverse\");\n\n  var _isInline = isInline || direction && direction.startsWith(\"row\");\n\n  var _direction;\n\n  if (_isInline) {\n    _direction = \"row\";\n  }\n\n  if (_isReversed) {\n    _direction = isInline ? \"row-reverse\" : \"column-reverse\";\n  }\n\n  if (direction) {\n    _direction = direction;\n  }\n\n  if (!_isInline && !_isReversed && !direction) {\n    _direction = \"column\";\n  }\n\n  var validChildrenArray = Children.toArray(children).filter(isValidElement);\n  return jsx(Flex, _extends({\n    align: align,\n    justify: justify,\n    direction: _direction\n  }, rest, {\n    ref: ref\n  }), validChildrenArray.map(function (child, index) {\n    var _ref2, _ref3;\n\n    var isLastChild = validChildrenArray.length === index + 1;\n    var spacingProps = _isInline ? (_ref2 = {}, _ref2[_isReversed ? \"ml\" : \"mr\"] = isLastChild ? null : spacing, _ref2) : (_ref3 = {}, _ref3[_isReversed ? \"mt\" : \"mb\"] = isLastChild ? null : spacing, _ref3);\n\n    if (shouldWrapChildren) {\n      return jsx(Box, _extends({\n        d: \"inline-block\"\n      }, spacingProps, {\n        key: \"stack-box-wrapper-\" + index\n      }), child);\n    }\n\n    return cloneElement(child, spacingProps);\n  }));\n});\nexport default Stack;","import React from \"react\";\nimport { Text, Box, Heading, Stack, PseudoBox } from \"@chakra-ui/core\";\nimport { graphql } from \"gatsby\";\n\nimport { SEO, Layout, InternalLink } from \"../components\";\n\ninterface PostData {\n  title: string;\n  date: string;\n  path: string;\n  excerpt: string;\n}\n\nconst Post: React.FC<PostData> = ({ title, path, excerpt, date }) => (\n  <Box>\n    <InternalLink to={path}>\n      <Heading size=\"md\" marginBottom={1}>\n        {title}\n      </Heading>\n    </InternalLink>\n    <Text fontSize=\"xs\" fontWeight=\"light\">\n      {date}\n    </Text>\n    <Text fontSize=\"sm\" fontWeight=\"light\">\n      {excerpt}\n    </Text>\n  </Box>\n);\n\nconst Posts: React.FC<any> = ({\n  data: {\n    allMdx: { edges }\n  }\n}) => {\n  const posts = edges.map(\n    ({ node: { frontmatter } }: any) => frontmatter\n  ) as PostData[];\n  return (\n    <Layout>\n      <SEO title=\"Posts\" />\n      <Stack spacing={3}>\n        {posts.map((post, key) => (\n          <PseudoBox marginBottom={4}>\n            <Post key={key} {...post} />\n          </PseudoBox>\n        ))}\n      </Stack>\n    </Layout>\n  );\n};\n\nexport const postsQuery = graphql`\n  query {\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"/src/posts/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            excerpt\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Posts;\n"],"sourceRoot":""}